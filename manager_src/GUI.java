/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manager;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author jamin
 */
public class GUI extends javax.swing.JFrame {
    /**
     * Creates new form GUI
     */
    private Globals globals = new Globals();
    
    public GUI() {
        
        initComponents();
        activeUpdater();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        knockPane = new javax.swing.JTabbedPane();
        controlKnockTab = new javax.swing.JPanel();
        createButton = new javax.swing.JButton();
        connectButton = new javax.swing.JButton();
        serverIpText = new javax.swing.JTextField();
        portText = new javax.swing.JTextField();
        knockText = new javax.swing.JTextField();
        colonLabel = new javax.swing.JLabel();
        upperSeparator = new javax.swing.JSeparator();
        lowerSeparator = new javax.swing.JSeparator();
        lowerScrollPanel = new javax.swing.JScrollPane();
        outputPane = new javax.swing.JTextArea();
        activeAgentsPane1 = new javax.swing.JScrollPane();
        activeAgentsList = new javax.swing.JList();
        configTab = new javax.swing.JPanel();
        scriptDirText = new javax.swing.JTextField();
        browseScriptDir = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        noConfigFound = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Knock Manager");

        knockPane.setBackground(new java.awt.Color(0, 0, 0));
        knockPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        knockPane.setForeground(new java.awt.Color(204, 204, 204));
        knockPane.setDoubleBuffered(true);
        knockPane.setFocusable(false);
        knockPane.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        knockPane.setInheritsPopupMenu(true);

        controlKnockTab.setBackground(new java.awt.Color(204, 204, 204));
        controlKnockTab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        controlKnockTab.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N

        createButton.setBackground(new java.awt.Color(102, 102, 102));
        createButton.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        createButton.setForeground(new java.awt.Color(0, 0, 0));
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        connectButton.setBackground(new java.awt.Color(102, 102, 102));
        connectButton.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        connectButton.setForeground(new java.awt.Color(0, 0, 0));
        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        serverIpText.setBackground(new java.awt.Color(204, 204, 204));
        serverIpText.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        serverIpText.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Server IP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        serverIpText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        portText.setBackground(new java.awt.Color(204, 204, 204));
        portText.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        portText.setText("9001");
        portText.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Port", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N

        knockText.setBackground(new java.awt.Color(204, 204, 204));
        knockText.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        knockText.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Secret Knock", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        knockText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        colonLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        colonLabel.setText(":");

        outputPane.setBackground(new java.awt.Color(204, 204, 204));
        outputPane.setColumns(20);
        outputPane.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        outputPane.setRows(5);
        outputPane.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Server Message", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        lowerScrollPanel.setViewportView(outputPane);

        activeAgentsPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Active Agents", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        activeAgentsPane1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        activeAgentsPane1.setOpaque(false);

        activeAgentsList.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        activeAgentsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                activeAgentsListValueChanged(evt);
            }
        });
        activeAgentsPane1.setViewportView(activeAgentsList);

        javax.swing.GroupLayout controlKnockTabLayout = new javax.swing.GroupLayout(controlKnockTab);
        controlKnockTab.setLayout(controlKnockTabLayout);
        controlKnockTabLayout.setHorizontalGroup(
            controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlKnockTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lowerScrollPanel)
                    .addGroup(controlKnockTabLayout.createSequentialGroup()
                        .addGroup(controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(controlKnockTabLayout.createSequentialGroup()
                                .addComponent(serverIpText, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(colonLabel)
                                .addGap(18, 18, 18)
                                .addComponent(portText, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(controlKnockTabLayout.createSequentialGroup()
                                .addComponent(upperSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                                .addGap(7, 7, 7))
                            .addGroup(controlKnockTabLayout.createSequentialGroup()
                                .addGroup(controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlKnockTabLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                                        .addComponent(connectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(14, 14, 14))
                                    .addComponent(lowerSeparator, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(knockText, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(4, 4, 4)))
                        .addComponent(activeAgentsPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)))
                .addContainerGap())
        );
        controlKnockTabLayout.setVerticalGroup(
            controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlKnockTabLayout.createSequentialGroup()
                .addGroup(controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, controlKnockTabLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serverIpText, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(portText, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(colonLabel))
                        .addGap(3, 3, 3)
                        .addComponent(upperSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(knockText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(controlKnockTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(connectButton)
                            .addComponent(createButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lowerSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(controlKnockTabLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(activeAgentsPane1)))
                .addGap(12, 12, 12)
                .addComponent(lowerScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        knockPane.addTab("Control", new javax.swing.ImageIcon(getClass().getResource("/manager/data/ico.png")), controlKnockTab); // NOI18N

        configTab.setBackground(new java.awt.Color(204, 204, 204));
        configTab.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N

        scriptDirText.setBackground(new java.awt.Color(204, 204, 204));
        scriptDirText.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        scriptDirText.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Script Directory", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 10))); // NOI18N
        scriptDirText.setText(globals.scriptDir);

        browseScriptDir.setBackground(new java.awt.Color(153, 153, 153));
        browseScriptDir.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        browseScriptDir.setText("Browse");
        browseScriptDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseScriptDirActionPerformed(evt);
            }
        });

        applyButton.setBackground(new java.awt.Color(102, 102, 102));
        applyButton.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        applyButton.setForeground(new java.awt.Color(0, 0, 204));
        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        noConfigFound.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        noConfigFound.setForeground(new java.awt.Color(204, 0, 0));
        noConfigFound.setText("Place \".knockrc\" in same directory as this program!");
        if (Globals.scriptDir == null || Globals.scriptDir == ""){
            noConfigFound.setVisible(true);
        }
        else{
            noConfigFound.setVisible(false);
        }

        javax.swing.GroupLayout configTabLayout = new javax.swing.GroupLayout(configTab);
        configTab.setLayout(configTabLayout);
        configTabLayout.setHorizontalGroup(
            configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(configTabLayout.createSequentialGroup()
                        .addGroup(configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configTabLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(configTabLayout.createSequentialGroup()
                                .addGroup(configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(noConfigFound)
                                    .addGroup(configTabLayout.createSequentialGroup()
                                        .addComponent(scriptDirText, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(browseScriptDir)))
                                .addGap(0, 185, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        configTabLayout.setVerticalGroup(
            configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(noConfigFound)
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(applyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(configTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(scriptDirText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(browseScriptDir))
                        .addGap(0, 245, Short.MAX_VALUE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        knockPane.addTab("Config", new javax.swing.ImageIcon(getClass().getResource("/manager/data/config.png")), configTab); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(knockPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(knockPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        new Globals().setScriptDirectory(scriptDirText.getText() + "/");
    }//GEN-LAST:event_applyButtonActionPerformed

    private void browseScriptDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseScriptDirActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(configTab);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            scriptDirText.setText(fc.getSelectedFile().toString());
        }
    }//GEN-LAST:event_browseScriptDirActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        String result = new Client(serverIpText.getText().trim(), Integer.parseInt(portText.getText())).createKnock(knockText.getText());
        String output;
        Globals.serverIP = serverIpText.getText().trim();
        Globals.serverPort = Integer.parseInt(portText.getText());
        if (result.charAt(1) == '0'){
            String extraMessage = "\nInstall the agent on any host using: " + " agent.py -i " + serverIpText.getText().trim() + " -p " + portText.getText().trim() + " -k \"" + knockText.getText() +"\"";
            output = serverIpText.getText().trim() + ": " + result + extraMessage;
        }
        else{
            output = serverIpText.getText().trim() + ": " + result;
        }
        outputPane.setText(output);
    }//GEN-LAST:event_createButtonActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        String result = new Client(serverIpText.getText().trim(), Integer.parseInt(portText.getText())).updateKnock(knockText.getText(), "connect");
        outputPane.setText(result);
        Globals.serverIP = serverIpText.getText().trim();
        Globals.serverPort = Integer.parseInt(portText.getText());
        try {
            if(!knockText.getText().equals("")){
                new Netcat().start();
            }
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_connectButtonActionPerformed

    private void activeAgentsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_activeAgentsListValueChanged
        try{
            knockText.setText(activeAgentsList.getSelectedValue().toString());
        }catch(Exception e){
            System.out.println("Patched...");
        }
    }//GEN-LAST:event_activeAgentsListValueChanged

    private void activeUpdater(){
        new Thread(new Runnable(){
            public void run() {
                String result;
                String[] activeKnocks;
                while(true){
                    DefaultListModel activeAgentListModel = new DefaultListModel();
                    result = new ActiveUpdater().start(Globals.serverIP, Globals.serverPort);
                    if (!result.equals("Could not connect to server.")){
                        activeKnocks = result.substring(4).replace("'", "").replace("\"", "").replace(")", "").replace("[", "").replace("]", "").split(",");
                        for(int i = 0; i < activeKnocks.length; i++){
                            activeAgentListModel.addElement(activeKnocks[i].trim());
                        }
                        activeAgentsList.setModel(activeAgentListModel);
                    }
                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }).start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList activeAgentsList;
    private javax.swing.JScrollPane activeAgentsPane1;
    private javax.swing.JButton applyButton;
    private javax.swing.JButton browseScriptDir;
    private javax.swing.JLabel colonLabel;
    private javax.swing.JPanel configTab;
    private javax.swing.JButton connectButton;
    private javax.swing.JPanel controlKnockTab;
    private javax.swing.JButton createButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane knockPane;
    private javax.swing.JTextField knockText;
    private javax.swing.JScrollPane lowerScrollPanel;
    private javax.swing.JSeparator lowerSeparator;
    private javax.swing.JLabel noConfigFound;
    private javax.swing.JTextArea outputPane;
    private javax.swing.JTextField portText;
    private javax.swing.JTextField scriptDirText;
    private javax.swing.JTextField serverIpText;
    private javax.swing.JSeparator upperSeparator;
    // End of variables declaration//GEN-END:variables
}
